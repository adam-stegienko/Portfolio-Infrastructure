name: 'Terraform'

on:
  push:
    branches:
      - main

jobs:
  terraform:
    env:
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      AZURE_SSH_KEY: ${{ secrets.AZURE_SSH_KEY }}
      PRINCIPAL_ID: ${{ secrets.PRINCIPAL_ID }}
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
    - name: SCM Checkout
      uses: actions/checkout@v3

    - name: Terraform environmental (prod) values given
      run: |
        cat << EOF > prod.tfvars
        service_principal = {\n
          subscription_id = "${{ env.ARM_SUBSCRIPTION_ID }}"\n
          tenant_id       = "${{ env.ARM_TENANT_ID }}"\n
          client_id       = "${{ env.ARM_CLIENT_ID }}"\n
          client_secret   = "${{ env.ARM_CLIENT_SECRET }}"\n
          principal_id    = "${{ env.PRINCIPAL_ID }}"\n
        }\n

        resource_group = {\n
          location = "West Europe"\n
          name     = "portfolio-develeap"\n
          id       = "/subscriptions/5aca752c-8d85-4445-bf68-d30c9eddc5d8/resourceGroups/portfolio-develeap"\n
        }\n

        log_analytics_workspace = {\n
          location = "westeurope"\n
          name     = "portfolio-analytics-prod"\n
          sku      = "PerGB2018"\n
        }

        cluster_name = "adam-prod"\n
        dns_prefix   = "adam-prod"\n

        tags = {\n
          environment = "prod"\n
          created_by  = "Adam Stegienko"\n
        }\n

        default_node_pool = {\n
          name       = "adam3nodes"\n
          vm_size    = "Standard_D2_v2"\n
          node_count = 3\n
        }

        admin_username = "ubuntu"\n
        ssh_public_key = "${{ env.AZURE_SSH_KEY }}"\n

        network_profile = {\n
          network_plugin     = "azure"\n
          load_balancer_sku  = "standard"\n
          dns_service_ip     = "22.0.7.111"\n
          docker_bridge_cidr = "22.0.7.0/20"\n
          service_cidr       = "22.0.7.0/24"\n
        }

        virtual_network_name           = "adam-prod-vnet"\n
        virtual_network_address_prefix = "14.0.0.0/8"\n
        aks_subnet_name                = "adam-prod-subnet-1"\n
        aks_subnet_address_prefix      = "14.0.0.0/16"\n

        acr_scope               = "/subscriptions/5aca752c-8d85-4445-bf68-d30c9eddc5d8/resourceGroups/portfolio-develeap/providers/Microsoft.ContainerRegistry/registries/digitalplanner"\n
        EOF
    
    - name: Terraform Format
      run: terraform fmt -recursive

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Git Config Init
      run: |
        git config --global url."https://oauth2:${{ env.GITHUB_TOKEN }}@github.com".insteadOf ssh://git@github.com

    - name: Terraform Init
      run: |
        terraform init -upgrade

    - name: Terraform Workspace
      run: |
        terraform workspace new prod
        terraform workspace select prod

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Terraform Plan
      run: terraform plan -no-color -var-file prod.tfvars
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -var-file prod.tfvars

    - name: First Cleanup
      run: rm prod.tfvars